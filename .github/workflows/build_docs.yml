name: Build docs

on:
  workflow_run:
    workflows: [Test package]
    types:
      - completed

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true
  
jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      # Directory that will be published on github pages
      PUBLISH_DIR: ./_build/html
    if: github.event.workflow_run.conclusion == 'success'
  
    steps:

      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: python -m pip install ".[test,docs]"

      - name: Build docs
        run: 	jupyter book build -W .

      - name: 'Download coverage artifact'
        uses: actions/github-script@v6.4.0
        with:
          script: |
          
            var artifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "code-coverage-report"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/code-coverage-report.zip', Buffer.from(download.data));
      - run: Unzip code-coverage-report.zip ${{ env.PUBLISH}}/code-coverage-report

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ${{ env.PUBLISH_DIR }}

  